name: Tag_Workflow
on: 
  push:
    branches:
      - main
jobs:
  Tag_Push_Job:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - 
        name: Check out repository code
        uses: actions/checkout@v2
      - 
        name: Fetching GO version from repo
        run: echo "GO_VERSION=$(cat .go-version)" >> $GITHUB_ENV
      - 
        name: Setup GO environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - 
        name: Code linter
        uses: golangci/golangci-lint-action@v2
        with: 
          args: -v --config=./.github/config/golangci.yml
      - 
        name: Running integration tests
        run: go test -v -coverpkg=./... -coverprofile=coverage.out ./...
        env:
          ULTRADNS_UNIT_TEST_USERNAME: ${{ secrets.ULTRADNS_UNIT_TEST_USERNAME }}
          ULTRADNS_UNIT_TEST_PASSWORD: ${{ secrets.ULTRADNS_UNIT_TEST_PASSWORD }}
          ULTRADNS_UNIT_TEST_HOST_URL: ${{ secrets.ULTRADNS_UNIT_TEST_HOST_URL }}
          ULTRADNS_UNIT_TEST_USER_AGENT: ${{ secrets.ULTRADNS_UNIT_TEST_USER_AGENT }}
          ULTRADNS_UNIT_TEST_OXFR_HOST_URL: ${{ ULTRADNS_UNIT_TEST_OXFR_HOST_URL }}
      - 
        name: Fetch code coverage
        run: go tool cover -func coverage.out
      - 
        name: Create Release Info
        run: |
          echo "SDK_VERSION=$(cat .sdk-version)" >> $GITHUB_ENV
          echo "CURRENT_TIME=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
          echo "COMMIT_ID=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${{ env.SDK_VERSION }}.${{ env.CURRENT_TIME }}.${{ env.COMMIT_ID }}" >> $GITHUB_ENV
      - 
        name: Setup git config for creating Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"
      - 
        name: Update sdk version and create Tag
        run: |
          git add internal/version/version_generated.go
          git commit -m "version updated"
          git tag ${{ env.RELEASE_VERSION }}
          git push origin ${{ env.RELEASE_VERSION }}